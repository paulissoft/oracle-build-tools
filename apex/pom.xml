<?xml version="1.0" encoding="windows-1252" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.paulissoft.pato</groupId>
    <artifactId>conf</artifactId>
    <version>${revision}</version>
    <relativePath>../conf/pom.xml</relativePath>
  </parent>
  <groupId>com.paulissoft.pato</groupId>
  <artifactId>apex</artifactId>
  <packaging>pom</packaging>
  <description>Core POM for Oracle Apex builds</description>
  
  <properties>
    <db.schema>${oracle_tools_schema}</db.schema>
    <oracle-tools.apex.src.dir>${oracle-tools.dir}/apex/src</oracle-tools.apex.src.dir>
    <oracle-tools.apex.scripts.dir>${oracle-tools.apex.src.dir}/scripts</oracle-tools.apex.scripts.dir>
    <!-- generic apex src dir -->
    <apex.src.dir>${basedir}/src</apex.src.dir>
    <apex.application.dir>${apex.src.dir}/export</apex.application.dir>

    <!-- ======================== -->
    <!-- Maven lifecycle phases   -->
    <!--                          -->
    <!-- See also ../conf/pom.xml -->
    <!-- ======================== -->    
    <apex.phase.init>validate</apex.phase.init>
    <apex.phase.process>compile</apex.phase.process>
    <apex.show.properties>false</apex.show.properties>
  </properties>

  <!-- Needed for Apex Export/Import scripts in child projects -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.paulissoft.pato</groupId>
        <artifactId>apex</artifactId>
        <version>${oracle-tools.apex.version}</version>
        <classifier>src</classifier>
        <type>zip</type>
        <!-- Make sure this isn't included on any classpath-->
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <resources>
      <resource>       
        <directory>${apex.application.dir}</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <executions>
            <execution>
              <id>apex-init</id>
              <phase>${apex.phase.init}</phase>
              <configuration>
                <exportAntProperties>true</exportAntProperties>
                <target>
                  <condition property="conf.connect.skip" value="true" else="false">
                    <not>
                      <or>
                        <available file="${apex.application.dir}" type="dir" />
                        <isset property="apex.application" />
                      </or>
                    </not>
                  </condition>
                  <property name="apex.skip" value="${conf.connect.skip}" />
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            
            <execution>
              <id>apex-debug-before</id>
              <phase>${apex.phase.init}</phase>
              <configuration>
                <target if="${apex.show.properties}">
                  <echoproperties prefix="apex." />
                  <echoproperties prefix="sql." />
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>

            <execution>
              <id>apex-operation-init</id>
              <phase>${apex.phase.process}</phase>
              <configuration>
                <exportAntProperties>true</exportAntProperties>
                <target>
                  <!-- derive apex.config.dir from db.properties (apex.properties must be in the same directory) -->
                  <dirname property="apex.config.dir" file="${db.properties}" />

                  <!-- Read the apex properties file into apex namespace.
                       The following property should be set:
                       - application
                  -->
                  <echo level="${ant.log.level}" message="Reading apex properties from file ${apex.config.dir}/apex.properties" />
                  <property file="${apex.config.dir}/apex.properties" prefix="apex" />
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>

            <execution>
              <id>apex-operation</id>
              <phase>${apex.phase.process}</phase>
              <configuration>
                <target unless="${apex.skip}">
                  <property name="apex.application.dir.abs"
                            location="${apex.application.dir}" />
                  <fail message="Property apex.operation must be export, import or seed-publish">
                    <condition>
                      <not>
                        <or>
                          <equals arg1="${apex.operation}" arg2="export" />
                          <equals arg1="${apex.operation}" arg2="import" />
                          <equals arg1="${apex.operation}" arg2="seed-publish" />
                        </or>
                      </not>
                    </condition>
                  </fail>
                  <fail message="Property db.userid must be set" unless="db.userid" />
                  <fail message="Property apex.application must be set" unless="apex.application" />
                  <fail message="Property apex.workspace must be set"
                        unless="apex.workspace" />
                  <!-- a default apex.application.version as a timestamp -->
                  <tstamp>
                    <format property="apex.application.version"
                            pattern="yyyy-MM-dd hh:mm:ss"/>
                  </tstamp>
                  <ant antfile="synchronize.xml" target="${apex.operation}" inheritAll="false" dir="${oracle-tools.apex.scripts.dir}">
                    <property name="application" value="${apex.application}" />
                    <property name="application.version" value="${apex.application.version}" />
                    <property name="userid" value="${db.userid}" />
                    <property name="workspace" value="${apex.workspace}" />
                    <property name="export.dir" value="${apex.application.dir}" />
                    <property name="sql.home" value="${sql.home}" />
                    <property name="ojdbc.java.version" value="${ojdbc.java.version}" />
                    <property name="env.SQL_HOME" value="${env.SQL_HOME}" />
                    <property name="env.LD_LIBRARY_PATH" value="${env.LD_LIBRARY_PATH}"/>
                    <reference torefid="runtime.classpath" refid="maven.runtime.classpath"/>
                  </ant>
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            
            <execution>
              <id>apex-debug-after</id>
              <phase>${apex.phase.process}</phase>
              <configuration>
                <target if="${apex.show.properties}">
                  <echoproperties prefix="apex." />
                  <echoproperties prefix="sql." />
                  <echoproperties prefix="env." />
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>      
      <!-- Configuration won't be propagated to children -->
      <!-- do not use parent configuration -->
      <!-- GJP 2022-06-20 Do not know why this has been commented out. Activate it again. -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <inherited>false</inherited>
        <configuration combine.self="override">                                     
          <descriptorRefs>
            <descriptorRef>project</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- profile to be called by the user -->
    <profile>
      <id>apex-export</id>
      <properties>
        <default.goal>compile</default.goal>
        <apex.operation>export</apex.operation>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profile to be called by the user -->
    <profile>
      <id>apex-import</id>
      <properties>
        <default.goal>compile</default.goal>
        <apex.operation>import</apex.operation>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profile to be called by the user -->
    <profile>
      <id>apex-seed-publish</id>
      <properties>
        <default.goal>compile</default.goal>
        <apex.operation>seed-publish</apex.operation>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profile to be called by the user -->
    <profile>
      <id>apex-inquiry</id>
      <properties>
        <default.goal>compile</default.goal>
        <conf.connect.skip>false</conf.connect.skip>
        <apex.skip>false</apex.skip>
        <apex.show.properties>true</apex.show.properties>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <!-- This matches and thus overrides execution defined above -->
                <id>apex-operation</id>
                <!-- Unbind from lifecycle for this POM -->
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profile activated when oracle-tools/apex is not where it should be -->
    <profile>
      <id>apex-dependency</id>
      <activation>
        <property>
          <name>apex.dependency</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <!-- When child projects have this POM as parent and this project as
             dependency, this is the way to set oracle-tools.apex.src.dir.
        -->
        <oracle-tools.apex.version>${project.parent.version}</oracle-tools.apex.version>
        <oracle-tools.apex.src.dir>${project.build.directory}/dependency/apex-${oracle-tools.apex.version}/src</oracle-tools.apex.src.dir>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.paulissoft.pato</groupId>
          <artifactId>apex</artifactId>
          <classifier>src</classifier>
          <type>zip</type>
        </dependency>
      </dependencies>
      <build>
        <resources/>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <modules>
    <module>app</module>
  </modules>
  
</project>
