# ===
# Database Config
# ===

# ===
# Oracle datasource
# ===
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# == set the following properties in your local properties file ===
spring.datasource.url=jdbc:oracle:thin:@//127.0.0.1:1521/freepdb1
spring.datasource.username=system
spring.datasource.password=change_on_install
spring.datasource.type=com.paulissoft.pato.jdbc.SimplePoolDataSourceHikari

# ===
# Oracle UCP
# ===

# https://docs.oracle.com/en/database/oracle/oracle-database/21/jjuar/oracle/ucp/jdbc/UCPDataSource.html
# 

spring.datasource.ucp.connection-factory-class-name=oracle.jdbc.pool.OracleDataSource
# spring.datasource.ucp.server-name
# spring.datasource.ucp.port-number
# spring.datasource.ucp.database-name
# spring.datasource.ucp.data-source-name
# spring.datasource.ucp.description
# spring.datasource.ucp.network-protocol
# spring.datasource.ucp.role-name
spring.datasource.ucp.validate-connection-on-borrow=true
# spring.datasource.ucp.sql-for-validate-connection
spring.datasource.ucp.connection-pool-name=common-pool
spring.datasource.ucp.initial-pool-size=0
spring.datasource.ucp.min-pool-size=10
spring.datasource.ucp.max-pool-size=20
spring.datasource.ucp.abandoned-connection-timeout=120
spring.datasource.ucp.time-to-live-connection-timeout=120
spring.datasource.ucp.inactive-connection-timeout=0
# spring.datasource.ucp.max-idle-time
spring.datasource.ucp.timeout-check-interval=30
# spring.datasource.ucp.property-cycle
spring.datasource.ucp.max-statements=10
spring.datasource.ucp.connection-wait-timeout=3
spring.datasource.ucp.max-connection-reuse-time=0
# spring.datasource.ucp.max-connection-reuse-count
# spring.datasource.ucp.connection-harvest-trigger-count
# spring.datasource.ucp.connection-harvest-max-count
# spring.datasource.ucp.fast-connection-fail-over-enabled
# spring.datasource.ucp.ons-configuration
spring.datasource.ucp.seconds-to-trust-idle-connection=120
# spring.datasource.ucp.login-timeout
# spring.datasource.ucp.connection-labeling-high-cost
# spring.datasource.ucp.connection-repurpose-threshold
# spring.datasource.ucp.high-cost-connection-reuse-threshold
# spring.datasource.ucp.max-connections-per-shard
# spring.datasource.ucp.sharding-mode
spring.datasource.ucp.connection-validation-timeout=15

# ===
# HikariCP settings.
# ===
#
# See also https://github.com/brettwooldridge/HikariCP#gear-configuration-knobs-baby
#
# Below is a list of HikariCP properties.
# For Spring Boot you will usually prefix the properties with something like "spring.datasource.hikari.".
#
# Example: spring.datasource.hikari.auto-commit=true
#
# Properties (and their default):
# - dataSourceClassName (none)
# - jdbcUrl (none)
# - username (none)
# - password (none)
# - autoCommit (true)
# - connectionTimeout (30000)
# - idleTimeout (600000)
# - maxLifetime (1800000)
# - connectionTestQuery (none)
# - minimumIdle (same as maximumPoolSize)
# - maximumPoolSize (10)
# - metricRegistry (none)
# - healthCheckRegistry (none)
# - poolName (auto-generated)
# - initializationFailTimeout (1)
# - isolateInternalQueries (false)
# - allowPoolSuspension (false)
# - readOnly (false)
# - registerMbeans (false)
# - catalog (driver default)
# - connectionInitSql (none)
# - driverClassName (none)
# - transactionIsolation (driver default)
# - validationTimeout (5000)
# - leakDetectionThreshold (0)
# - dataSource (none)
# - schema (none)
# - threadFactory (none)
# - scheduledExecutor (none)

spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.connectionTestQuery=select 1 from dual
# 6 * 10
spring.datasource.hikari.maximumPoolSize=60
spring.datasource.hikari.pool-name=HikariPool-1
spring.datasource.hikari.minimumIdle=${spring.datasource.hikari.maximumPoolSize}
spring.datasource.hikari.initializationFailTimeout=1
spring.datasource.hikari.isolateInternalQueries=false
spring.datasource.hikari.allowPoolSuspension=false
spring.datasource.hikari.readOnly=false
spring.datasource.hikari.registerMbeans=false
spring.datasource.hikari.validationTimeout=5000
spring.datasource.hikari.leakDetectionThreshold=0

# ---
# Auth Database Config
# ---
app.auth.datasource.url=${spring.datasource.url}
app.auth.datasource.username=${spring.datasource.username}[boauth]
app.auth.datasource.password=${spring.datasource.password}
# ---
app.auth.datasource.hikari.auto-commit=${spring.datasource.hikari.auto-commit}
app.auth.datasource.hikari.connectionTimeout=${spring.datasource.hikari.connectionTimeout}
app.auth.datasource.hikari.idleTimeout=${spring.datasource.hikari.idleTimeout}
app.auth.datasource.hikari.maxLifetime=${spring.datasource.hikari.maxLifetime}
app.auth.datasource.hikari.connectionTestQuery=${spring.datasource.hikari.connectionTestQuery}
app.auth.datasource.hikari.minimumIdle=${spring.datasource.hikari.minimumIdle}
app.auth.datasource.hikari.maximumPoolSize=${spring.datasource.hikari.maximumPoolSize}
app.auth.datasource.hikari.pool-name=HikariPool-boauth
app.auth.datasource.hikari.initializationFailTimeout=${spring.datasource.hikari.initializationFailTimeout}
app.auth.datasource.hikari.isolateInternalQueries=${spring.datasource.hikari.isolateInternalQueries}
app.auth.datasource.hikari.allowPoolSuspension=${spring.datasource.hikari.allowPoolSuspension}
app.auth.datasource.hikari.readOnly=${spring.datasource.hikari.readOnly}
app.auth.datasource.hikari.registerMbeans=${spring.datasource.hikari.registerMbeans}
app.auth.datasource.hikari.validationTimeout=${spring.datasource.hikari.validationTimeout}
app.auth.datasource.hikari.leakDetectionThreshold=${spring.datasource.hikari.leakDetectionThreshold}
# ---
app.auth.datasource.ucp.connection-factory-class-name=${spring.datasource.ucp.connection-factory-class-name}
app.auth.datasource.ucp.validate-connection-on-borrow=${spring.datasource.ucp.validate-connection-on-borrow}
app.auth.datasource.ucp.connection-pool-name=${spring.datasource.ucp.connection-pool-name}
app.auth.datasource.ucp.initial-pool-size=${spring.datasource.ucp.initial-pool-size}
app.auth.datasource.ucp.min-pool-size=${spring.datasource.ucp.min-pool-size}
app.auth.datasource.ucp.max-pool-size=${spring.datasource.ucp.max-pool-size}
app.auth.datasource.ucp.abandoned-connection-timeout=${spring.datasource.ucp.abandoned-connection-timeout}
app.auth.datasource.ucp.time-to-live-connection-timeout=${spring.datasource.ucp.time-to-live-connection-timeout}
app.auth.datasource.ucp.inactive-connection-timeout=${spring.datasource.ucp.inactive-connection-timeout}
app.auth.datasource.ucp.timeout-check-interval=${spring.datasource.ucp.timeout-check-interval}
app.auth.datasource.ucp.max-statements=${spring.datasource.ucp.max-statements}
app.auth.datasource.ucp.connection-wait-timeout=${spring.datasource.ucp.connection-wait-timeout}
app.auth.datasource.ucp.max-connection-reuse-time=${spring.datasource.ucp.max-connection-reuse-time}
app.auth.datasource.ucp.seconds-to-trust-idle-connection=${spring.datasource.ucp.seconds-to-trust-idle-connection}
app.auth.datasource.ucp.connection-validation-timeout=${spring.datasource.ucp.connection-validation-timeout}
# ---
app.auth.datasource.type=${spring.datasource.type}

# ---
# OCPP Database Config
# ---
app.ocpp.datasource.url=${spring.datasource.url}
app.ocpp.datasource.username=${spring.datasource.username}[boocpp15j]
app.ocpp.datasource.password=${spring.datasource.password}
# ---
app.ocpp.datasource.hikari.auto-commit=${spring.datasource.hikari.auto-commit}
app.ocpp.datasource.hikari.connectionTimeout=${spring.datasource.hikari.connectionTimeout}
app.ocpp.datasource.hikari.idleTimeout=${spring.datasource.hikari.idleTimeout}
app.ocpp.datasource.hikari.maxLifetime=${spring.datasource.hikari.maxLifetime}
app.ocpp.datasource.hikari.connectionTestQuery=${spring.datasource.hikari.connectionTestQuery}
app.ocpp.datasource.hikari.minimumIdle=${spring.datasource.hikari.minimumIdle}
app.ocpp.datasource.hikari.maximumPoolSize=${spring.datasource.hikari.maximumPoolSize}
app.ocpp.datasource.hikari.pool-name=HikariPool-boocpp15j
app.ocpp.datasource.hikari.initializationFailTimeout=${spring.datasource.hikari.initializationFailTimeout}
app.ocpp.datasource.hikari.isolateInternalQueries=${spring.datasource.hikari.isolateInternalQueries}
app.ocpp.datasource.hikari.allowPoolSuspension=${spring.datasource.hikari.allowPoolSuspension}
app.ocpp.datasource.hikari.readOnly=${spring.datasource.hikari.readOnly}
app.ocpp.datasource.hikari.registerMbeans=${spring.datasource.hikari.registerMbeans}
app.ocpp.datasource.hikari.validationTimeout=${spring.datasource.hikari.validationTimeout}
app.ocpp.datasource.hikari.leakDetectionThreshold=${spring.datasource.hikari.leakDetectionThreshold}
# ---
app.ocpp.datasource.ucp.connection-factory-class-name=${spring.datasource.ucp.connection-factory-class-name}
app.ocpp.datasource.ucp.validate-connection-on-borrow=${spring.datasource.ucp.validate-connection-on-borrow}
app.ocpp.datasource.ucp.connection-pool-name=${spring.datasource.ucp.connection-pool-name}
app.ocpp.datasource.ucp.initial-pool-size=${spring.datasource.ucp.initial-pool-size}
app.ocpp.datasource.ucp.min-pool-size=${spring.datasource.ucp.min-pool-size}
app.ocpp.datasource.ucp.max-pool-size=${spring.datasource.ucp.max-pool-size}
app.ocpp.datasource.ucp.abandoned-connection-timeout=${spring.datasource.ucp.abandoned-connection-timeout}
app.ocpp.datasource.ucp.time-to-live-connection-timeout=${spring.datasource.ucp.time-to-live-connection-timeout}
app.ocpp.datasource.ucp.inactive-connection-timeout=${spring.datasource.ucp.inactive-connection-timeout}
app.ocpp.datasource.ucp.timeout-check-interval=${spring.datasource.ucp.timeout-check-interval}
app.ocpp.datasource.ucp.max-statements=${spring.datasource.ucp.max-statements}
app.ocpp.datasource.ucp.connection-wait-timeout=${spring.datasource.ucp.connection-wait-timeout}
app.ocpp.datasource.ucp.max-connection-reuse-time=${spring.datasource.ucp.max-connection-reuse-time}
app.ocpp.datasource.ucp.seconds-to-trust-idle-connection=${spring.datasource.ucp.seconds-to-trust-idle-connection}
app.ocpp.datasource.ucp.connection-validation-timeout=${spring.datasource.ucp.connection-validation-timeout}
# ---
app.ocpp.datasource.type=${spring.datasource.type}

# ---
# OCPI Database Config
# ---
app.ocpi.datasource.url=${spring.datasource.url}
app.ocpi.datasource.username=${spring.datasource.username}[boocpi]
app.ocpi.datasource.password=${spring.datasource.password}
# ---
app.ocpi.datasource.hikari.auto-commit=${spring.datasource.hikari.auto-commit}
app.ocpi.datasource.hikari.connectionTimeout=${spring.datasource.hikari.connectionTimeout}
app.ocpi.datasource.hikari.idleTimeout=${spring.datasource.hikari.idleTimeout}
app.ocpi.datasource.hikari.maxLifetime=${spring.datasource.hikari.maxLifetime}
app.ocpi.datasource.hikari.connectionTestQuery=${spring.datasource.hikari.connectionTestQuery}
app.ocpi.datasource.hikari.minimumIdle=${spring.datasource.hikari.minimumIdle}
app.ocpi.datasource.hikari.maximumPoolSize=${spring.datasource.hikari.maximumPoolSize}
app.ocpi.datasource.hikari.pool-name=HikariPool-boocpi
app.ocpi.datasource.hikari.initializationFailTimeout=${spring.datasource.hikari.initializationFailTimeout}
app.ocpi.datasource.hikari.isolateInternalQueries=${spring.datasource.hikari.isolateInternalQueries}
app.ocpi.datasource.hikari.allowPoolSuspension=${spring.datasource.hikari.allowPoolSuspension}
app.ocpi.datasource.hikari.readOnly=${spring.datasource.hikari.readOnly}
app.ocpi.datasource.hikari.registerMbeans=${spring.datasource.hikari.registerMbeans}
app.ocpi.datasource.hikari.validationTimeout=${spring.datasource.hikari.validationTimeout}
app.ocpi.datasource.hikari.leakDetectionThreshold=${spring.datasource.hikari.leakDetectionThreshold}
# ---
app.ocpi.datasource.ucp.connection-factory-class-name=${spring.datasource.ucp.connection-factory-class-name}
app.ocpi.datasource.ucp.validate-connection-on-borrow=${spring.datasource.ucp.validate-connection-on-borrow}
app.ocpi.datasource.ucp.connection-pool-name=${spring.datasource.ucp.connection-pool-name}
app.ocpi.datasource.ucp.initial-pool-size=${spring.datasource.ucp.initial-pool-size}
app.ocpi.datasource.ucp.min-pool-size=${spring.datasource.ucp.min-pool-size}
app.ocpi.datasource.ucp.max-pool-size=${spring.datasource.ucp.max-pool-size}
app.ocpi.datasource.ucp.abandoned-connection-timeout=${spring.datasource.ucp.abandoned-connection-timeout}
app.ocpi.datasource.ucp.time-to-live-connection-timeout=${spring.datasource.ucp.time-to-live-connection-timeout}
app.ocpi.datasource.ucp.inactive-connection-timeout=${spring.datasource.ucp.inactive-connection-timeout}
app.ocpi.datasource.ucp.timeout-check-interval=${spring.datasource.ucp.timeout-check-interval}
app.ocpi.datasource.ucp.max-statements=${spring.datasource.ucp.max-statements}
app.ocpi.datasource.ucp.connection-wait-timeout=${spring.datasource.ucp.connection-wait-timeout}
app.ocpi.datasource.ucp.max-connection-reuse-time=${spring.datasource.ucp.max-connection-reuse-time}
app.ocpi.datasource.ucp.seconds-to-trust-idle-connection=${spring.datasource.ucp.seconds-to-trust-idle-connection}
app.ocpi.datasource.ucp.connection-validation-timeout=${spring.datasource.ucp.connection-validation-timeout}
# ---
app.ocpi.datasource.type=${spring.datasource.type}

# ---
# CS Database Config
# ---
app.config.datasource.url=${spring.datasource.url}
app.config.datasource.username=${spring.datasource.username}[bocsconf]
app.config.datasource.password=${spring.datasource.password}
# ---
app.config.datasource.hikari.auto-commit=${spring.datasource.hikari.auto-commit}
app.config.datasource.hikari.connectionTimeout=${spring.datasource.hikari.connectionTimeout}
app.config.datasource.hikari.idleTimeout=${spring.datasource.hikari.idleTimeout}
app.config.datasource.hikari.maxLifetime=${spring.datasource.hikari.maxLifetime}
app.config.datasource.hikari.connectionTestQuery=${spring.datasource.hikari.connectionTestQuery}
app.config.datasource.hikari.minimumIdle=${spring.datasource.hikari.minimumIdle}
app.config.datasource.hikari.maximumPoolSize=${spring.datasource.hikari.maximumPoolSize}
app.config.datasource.hikari.pool-name=HikariPool-bocsconf
app.config.datasource.hikari.initializationFailTimeout=${spring.datasource.hikari.initializationFailTimeout}
app.config.datasource.hikari.isolateInternalQueries=${spring.datasource.hikari.isolateInternalQueries}
app.config.datasource.hikari.allowPoolSuspension=${spring.datasource.hikari.allowPoolSuspension}
app.config.datasource.hikari.readOnly=${spring.datasource.hikari.readOnly}
app.config.datasource.hikari.registerMbeans=${spring.datasource.hikari.registerMbeans}
app.config.datasource.hikari.validationTimeout=${spring.datasource.hikari.validationTimeout}
app.config.datasource.hikari.leakDetectionThreshold=${spring.datasource.hikari.leakDetectionThreshold}
# ---
app.config.datasource.ucp.connection-factory-class-name=${spring.datasource.ucp.connection-factory-class-name}
app.config.datasource.ucp.validate-connection-on-borrow=${spring.datasource.ucp.validate-connection-on-borrow}
app.config.datasource.ucp.connection-pool-name=${spring.datasource.ucp.connection-pool-name}
app.config.datasource.ucp.initial-pool-size=${spring.datasource.ucp.initial-pool-size}
app.config.datasource.ucp.min-pool-size=${spring.datasource.ucp.min-pool-size}
app.config.datasource.ucp.max-pool-size=${spring.datasource.ucp.max-pool-size}
app.config.datasource.ucp.abandoned-connection-timeout=${spring.datasource.ucp.abandoned-connection-timeout}
app.config.datasource.ucp.time-to-live-connection-timeout=${spring.datasource.ucp.time-to-live-connection-timeout}
app.config.datasource.ucp.inactive-connection-timeout=${spring.datasource.ucp.inactive-connection-timeout}
app.config.datasource.ucp.timeout-check-interval=${spring.datasource.ucp.timeout-check-interval}
app.config.datasource.ucp.max-statements=${spring.datasource.ucp.max-statements}
app.config.datasource.ucp.connection-wait-timeout=${spring.datasource.ucp.connection-wait-timeout}
app.config.datasource.ucp.max-connection-reuse-time=${spring.datasource.ucp.max-connection-reuse-time}
app.config.datasource.ucp.seconds-to-trust-idle-connection=${spring.datasource.ucp.seconds-to-trust-idle-connection}
app.config.datasource.ucp.connection-validation-timeout=${spring.datasource.ucp.connection-validation-timeout}
# ---
app.config.datasource.type=${spring.datasource.type}

# ---
# Domain Database Config
# ---
app.domain.datasource.url=${spring.datasource.url}
app.domain.datasource.username=${spring.datasource.username}[bodomain]
app.domain.datasource.password=${spring.datasource.password}
# ---
app.domain.datasource.hikari.auto-commit=${spring.datasource.hikari.auto-commit}
app.domain.datasource.hikari.connectionTimeout=${spring.datasource.hikari.connectionTimeout}
app.domain.datasource.hikari.idleTimeout=${spring.datasource.hikari.idleTimeout}
app.domain.datasource.hikari.maxLifetime=${spring.datasource.hikari.maxLifetime}
app.domain.datasource.hikari.connectionTestQuery=${spring.datasource.hikari.connectionTestQuery}
app.domain.datasource.hikari.minimumIdle=${spring.datasource.hikari.minimumIdle}
app.domain.datasource.hikari.maximumPoolSize=${spring.datasource.hikari.maximumPoolSize}
app.domain.datasource.hikari.pool-name=HikariPool-bodomain
app.domain.datasource.hikari.initializationFailTimeout=${spring.datasource.hikari.initializationFailTimeout}
app.domain.datasource.hikari.isolateInternalQueries=${spring.datasource.hikari.isolateInternalQueries}
app.domain.datasource.hikari.allowPoolSuspension=${spring.datasource.hikari.allowPoolSuspension}
app.domain.datasource.hikari.readOnly=${spring.datasource.hikari.readOnly}
app.domain.datasource.hikari.registerMbeans=${spring.datasource.hikari.registerMbeans}
app.domain.datasource.hikari.validationTimeout=${spring.datasource.hikari.validationTimeout}
app.domain.datasource.hikari.leakDetectionThreshold=${spring.datasource.hikari.leakDetectionThreshold}
# ---
app.domain.datasource.ucp.connection-factory-class-name=${spring.datasource.ucp.connection-factory-class-name}
app.domain.datasource.ucp.validate-connection-on-borrow=${spring.datasource.ucp.validate-connection-on-borrow}
app.domain.datasource.ucp.connection-pool-name=${spring.datasource.ucp.connection-pool-name}
app.domain.datasource.ucp.initial-pool-size=${spring.datasource.ucp.initial-pool-size}
app.domain.datasource.ucp.min-pool-size=${spring.datasource.ucp.min-pool-size}
app.domain.datasource.ucp.max-pool-size=${spring.datasource.ucp.max-pool-size}
app.domain.datasource.ucp.abandoned-connection-timeout=${spring.datasource.ucp.abandoned-connection-timeout}
app.domain.datasource.ucp.time-to-live-connection-timeout=${spring.datasource.ucp.time-to-live-connection-timeout}
app.domain.datasource.ucp.inactive-connection-timeout=${spring.datasource.ucp.inactive-connection-timeout}
app.domain.datasource.ucp.timeout-check-interval=${spring.datasource.ucp.timeout-check-interval}
app.domain.datasource.ucp.max-statements=${spring.datasource.ucp.max-statements}
app.domain.datasource.ucp.connection-wait-timeout=${spring.datasource.ucp.connection-wait-timeout}
app.domain.datasource.ucp.max-connection-reuse-time=${spring.datasource.ucp.max-connection-reuse-time}
app.domain.datasource.ucp.seconds-to-trust-idle-connection=${spring.datasource.ucp.seconds-to-trust-idle-connection}
app.domain.datasource.ucp.connection-validation-timeout=${spring.datasource.ucp.connection-validation-timeout}
# ---
app.domain.datasource.type=${spring.datasource.type}

# ---
# Operator Database Config
# ---
app.operator.datasource.url=${spring.datasource.url}
app.operator.datasource.username=${spring.datasource.username}[boopapij]
app.operator.datasource.password=${spring.datasource.password}
# ---
app.operator.datasource.hikari.auto-commit=${spring.datasource.hikari.auto-commit}
app.operator.datasource.hikari.connectionTimeout=${spring.datasource.hikari.connectionTimeout}
app.operator.datasource.hikari.idleTimeout=${spring.datasource.hikari.idleTimeout}
app.operator.datasource.hikari.maxLifetime=${spring.datasource.hikari.maxLifetime}
app.operator.datasource.hikari.connectionTestQuery=${spring.datasource.hikari.connectionTestQuery}
app.operator.datasource.hikari.minimumIdle=${spring.datasource.hikari.minimumIdle}
app.operator.datasource.hikari.maximumPoolSize=${spring.datasource.hikari.maximumPoolSize}
app.operator.datasource.hikari.pool-name=HikariPool-boopapij
app.operator.datasource.hikari.initializationFailTimeout=${spring.datasource.hikari.initializationFailTimeout}
app.operator.datasource.hikari.isolateInternalQueries=${spring.datasource.hikari.isolateInternalQueries}
app.operator.datasource.hikari.allowPoolSuspension=${spring.datasource.hikari.allowPoolSuspension}
app.operator.datasource.hikari.readOnly=${spring.datasource.hikari.readOnly}
app.operator.datasource.hikari.registerMbeans=${spring.datasource.hikari.registerMbeans}
app.operator.datasource.hikari.validationTimeout=${spring.datasource.hikari.validationTimeout}
app.operator.datasource.hikari.leakDetectionThreshold=${spring.datasource.hikari.leakDetectionThreshold}
# ---
app.operator.datasource.ucp.connection-factory-class-name=${spring.datasource.ucp.connection-factory-class-name}
app.operator.datasource.ucp.validate-connection-on-borrow=${spring.datasource.ucp.validate-connection-on-borrow}
app.operator.datasource.ucp.connection-pool-name=${spring.datasource.ucp.connection-pool-name}
app.operator.datasource.ucp.initial-pool-size=${spring.datasource.ucp.initial-pool-size}
app.operator.datasource.ucp.min-pool-size=${spring.datasource.ucp.min-pool-size}
app.operator.datasource.ucp.max-pool-size=${spring.datasource.ucp.max-pool-size}
app.operator.datasource.ucp.abandoned-connection-timeout=${spring.datasource.ucp.abandoned-connection-timeout}
app.operator.datasource.ucp.time-to-live-connection-timeout=${spring.datasource.ucp.time-to-live-connection-timeout}
app.operator.datasource.ucp.inactive-connection-timeout=${spring.datasource.ucp.inactive-connection-timeout}
app.operator.datasource.ucp.timeout-check-interval=${spring.datasource.ucp.timeout-check-interval}
app.operator.datasource.ucp.max-statements=${spring.datasource.ucp.max-statements}
app.operator.datasource.ucp.connection-wait-timeout=${spring.datasource.ucp.connection-wait-timeout}
app.operator.datasource.ucp.max-connection-reuse-time=${spring.datasource.ucp.max-connection-reuse-time}
app.operator.datasource.ucp.seconds-to-trust-idle-connection=${spring.datasource.ucp.seconds-to-trust-idle-connection}
app.operator.datasource.ucp.connection-validation-timeout=${spring.datasource.ucp.connection-validation-timeout}
# ---
app.operator.datasource.type=${spring.datasource.type}
