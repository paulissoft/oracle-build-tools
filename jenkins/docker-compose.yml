version: '3.8'

networks:
  jenkins-network:
    name: jenkins
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24

volumes:
  jenkins-data:
    name: jenkins-data
  nfs-server-volume:
    name: nfs-server-volume
  jenkins-agent-workspace:
    name: jenkins-agent-workspace
    driver_opts:
      type: "nfs"
      o: "addr=192.168.1.3,nfsvers=4,nolock,soft,rw"
      device: ":/workspace"
  jenkins-m2-repository:
    name: jenkins-m2-repository
    driver_opts:
      type: "nfs"
      o: "addr=192.168.1.3,nfsvers=4,nolock,soft,rw"
      device: ":/repository"

services:
  # See https://davelms.medium.com/run-jenkins-in-a-docker-container-part-2-socat-d5f18820fe1d
  jenkins-docker:
    profiles:
      - docker
      - controller
    container_name: jenkins_docker
    image: alpine/socat
    restart: unless-stopped
    hostname: jenkins-docker
    networks:
      jenkins-network:
        ipv4_address: 192.168.1.2
    expose:
      - "2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock
  jenkins-controller:
    profiles:
      - controller
    container_name: jenkins_controller
    build: jenkins-controller
    restart: unless-stopped
    hostname: jenkins-controller
    ports:
      - 50000:50000
      - 8080:8080
    networks:
      jenkins-network:
        ipv4_address: 192.168.1.4
    volumes:
      - jenkins-data:/var/jenkins_home
    environment:
      - DOCKER_HOST=tcp://192.168.1.2:2375
      - DOCKER_TLS_VERIFY=""
    depends_on:
      - jenkins-docker
  jenkins-nfs-server:
    profiles:
      - nfs
    container_name: jenkins_nfs_server
    build: jenkins-nfs-server
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
      - SYS_MODULE
    hostname: jenkins-nfs-server
    networks:
      jenkins-network:
        ipv4_address: 192.168.1.3
    volumes:
    - type: ${NFS_SERVER_VOLUME_TYPE}
      source: ${NFS_SERVER_VOLUME}
      target: /nfs
    - type: bind
      source: ${LIB_MODULES_DIR}
      target: /lib/modules
      read_only: true
    environment:
      - NFS_LOG_LEVEL=DEBUG
      - NFS_DISABLE_VERSION_3=1
  jenkins-nfs-client:
    profiles:
      - nfs
    container_name: jenkins_nfs_client
    image: ghcr.io/paulissoft/pato-jenkins-agent:latest
    restart: unless-stopped
    command:
      - /bin/sh
      - -c
      - |
          trap : TERM INT
          sleep infinity
          wait
    hostname: jenkins-nfs-client
    networks:
      jenkins-network:
        ipv4_address: 192.168.1.5
    volumes:
    - type: volume
      source: jenkins-agent-workspace
      target: /home/jenkins/agent/workspace
      volume:
        nocopy: true
    - type: volume
      source: jenkins-m2-repository
      target: /home/jenkins/.m2/repository
      volume:
        nocopy: true
    depends_on:
      - jenkins-nfs-server
  dns-proxy-server:  # for the time being not necessary hence profile dns that is not added in setup.sh
    profiles:
      - dns
    container_name: dns_proxy_server
    image: defreitas/dns-proxy-server
    restart: unless-stopped
    hostname: dns.mageddo
    networks:
      jenkins-network:
        ipv4_address: 192.168.1.6
    # https://github.com/mageddo/dns-proxy-server/issues/166
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc:/host/etc
    environment:
      - MG_RESOLVCONF=/host/etc/resolv.conf

      
